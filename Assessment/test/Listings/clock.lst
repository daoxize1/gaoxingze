C51 COMPILER V9.57.0.0   CLOCK                                                             04/03/2020 16:55:45 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN .\Objects\clock.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE clock.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\clo
                    -ck.lst) OBJECT(.\Objects\clock.obj)

line level    source

   1          #include <STC12C5A60S2.H>
   2          char Time[3]={23,59,29};
   3          char Alarm[3]={00,01,00};
   4          char TimeDisplay[9]={0};
   5          char xdata UartString[17]={0};
   6          unsigned int i = 0;
   7          
   8          extern char Interface;
   9          extern bit BuzzerOn;
  10          extern bit overlimit;
  11          extern bit flag;
  12          extern unsigned int Volt;
  13          extern unsigned char VH;
  14          extern unsigned char VL;
  15          extern char xdata VoltString[6];
  16          
  17          extern void LCDShowStr(unsigned char x,unsigned char y,char *str);
  18          extern void LCDShowChar(unsigned char x,unsigned char y,char ch);
  19          extern void LCDWriteCmd(unsigned char cmd);
  20          extern void RingOn();
  21          extern void VoltToString(unsigned int Volt);
  22          extern void UartSentString(char *str);
  23          
  24          void ClockInit();
  25          void CharToString(char Arra[]);
  26          void DisplayInterfaceA();
  27          void DisplayInterfaceB();
  28          void DataToUartString();
  29          
  30          
  31          void ClockInit()//10ms@32MHz
  32          {               
  33   1              TMOD &= 0xF0;           
  34   1              TMOD |= 0x01;           
  35   1              TL0 = 0xD5;             
  36   1              TH0 = 0x97;             
  37   1              TF0 = 0;                
  38   1              TR0 = 1;                
  39   1              ET0 = 1;
  40   1      }
  41          
  42          void CharToString(char Arra[])                  //将时间变为字符串来显示
  43          {
  44   1              TimeDisplay[0] = Arra[0]/10+'0';
  45   1              TimeDisplay[1] = Arra[0]%10+'0';
  46   1              TimeDisplay[2] = '-';
  47   1              TimeDisplay[3] = Arra[1]/10+'0';
  48   1              TimeDisplay[4] = Arra[1]%10+'0';
  49   1              TimeDisplay[5] = '-';
  50   1              TimeDisplay[6] = Arra[2]/10+'0';
  51   1              TimeDisplay[7] = Arra[2]%10+'0';
  52   1              TimeDisplay[8] = '\0';
  53   1      }
  54          
C51 COMPILER V9.57.0.0   CLOCK                                                             04/03/2020 16:55:45 PAGE 2   

  55          void DisplayInterfaceA()                                //显示界面A
  56          {
  57   1              LCDWriteCmd(0x01); 
  58   1              LCDShowStr(0,0,"A");
  59   1              CharToString(Time);
  60   1              LCDShowStr(4,0,TimeDisplay);
  61   1              
  62   1              VoltToString(Volt);
  63   1              LCDShowStr(0,1,"V1:");
  64   1              LCDShowStr(3,1,VoltString);
  65   1      }
  66          
  67          
  68          void DisplayInterfaceB()                                //显示界面B
  69          {
  70   1              LCDWriteCmd(0x01); 
  71   1              LCDShowStr(0,0,"B");
  72   1              CharToString(Alarm);
  73   1              LCDShowStr(4,0,TimeDisplay);
  74   1              
  75   1              LCDShowStr(0,1,"VH:");
  76   1              LCDShowChar(3,1,VH+'0');
  77   1              LCDShowStr(8,1,"VL:");
  78   1              LCDShowChar(11,1,VL+'0');
  79   1      }
  80          
  81          void DataToUartString()                                 //将上报电压的数据转换为字符串来上报
  82          {
  83   1              unsigned char i;
  84   1              for(i=0; i<4; i++)
  85   1              {
  86   2                      UartString[i] = VoltString[i];
  87   2              }
  88   1              
  89   1              UartString[4] = '+';
  90   1              UartString[5] = Time[0]/10 + '0';
  91   1              UartString[6] = Time[0]%10 + '0';       
  92   1              UartString[7] = Time[1]/10 + '0';
  93   1              UartString[8] = Time[1]%10 + '0';
  94   1              UartString[9] = Time[2]/10 + '0';
  95   1              UartString[10] = Time[2]%10 + '0';
  96   1              UartString[11] = '\r';
  97   1              UartString[12] = '\n';
  98   1              UartString[13] = '\0';
  99   1      }
 100          
 101          void Timer0Interrupt() interrupt 1
 102          {
 103   1              i++;
 104   1              TL0 = 0xD5;
 105   1              TH0 = 0x97;     
 106   1              TR0 = 1;
 107   1              if(i == 100)                                                    //时钟 进位
 108   1              {
 109   2                      Time[2]++;
 110   2                      i = 0;
 111   2                      
 112   2                      if(Time[2] == 60)
 113   2                      {
 114   3                              Time[1]++;
 115   3                              Time[2] = 0;
 116   3                              
C51 COMPILER V9.57.0.0   CLOCK                                                             04/03/2020 16:55:45 PAGE 3   

 117   3                              if(Time[1] == 60)
 118   3                              {
 119   4                                      Time[0]++;
 120   4                                      Time[1] = 0;
 121   4                                      
 122   4                                      if(Time[0] == 24)
 123   4                                      {
 124   5                                              Time[0] = 0;
 125   5                                      }
 126   4                              }
 127   3                      }
 128   2              }
 129   1              if(Time[0]==Alarm[0] && Time[1]==Alarm[1]&&Time[2]==Alarm[2]) //闹铃时间到
 130   1              {
 131   2                      BuzzerOn = 1;
 132   2              }
 133   1              if(i == 10&&Interface == 'A')
 134   1              {
 135   2                      DisplayInterfaceA();
 136   2              }
 137   1              if(i == 10&&Interface == 'B')
 138   1              {
 139   2                      DisplayInterfaceB();
 140   2              }
 141   1              if(i == 95 && overlimit == 1 && flag == 1)              //超限上报
 142   1              {
 143   2                      DataToUartString();
 144   2                      TI = 0;
 145   2                      UartSentString(UartString);
 146   2              }
 147   1              
 148   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    612    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =     17    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
